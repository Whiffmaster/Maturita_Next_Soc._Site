"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@react-aria+slider@3.7.6_react@18.2.0";
exports.ids = ["vendor-chunks/@react-aria+slider@3.7.6_react@18.2.0"];
exports.modules = {

/***/ "(ssr)/../node_modules/.pnpm/@react-aria+slider@3.7.6_react@18.2.0/node_modules/@react-aria/slider/dist/import.mjs":
/*!*******************************************************************************************************************!*\
  !*** ../node_modules/.pnpm/@react-aria+slider@3.7.6_react@18.2.0/node_modules/@react-aria/slider/dist/import.mjs ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useSlider: () => (/* binding */ $bcca50147b47f54d$export$56b2c08e277f365),\n/* harmony export */   useSliderThumb: () => (/* binding */ $47b897dc8cdb026b$export$8d15029008292ae)\n/* harmony export */ });\n/* harmony import */ var _react_aria_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @react-aria/utils */ \"(ssr)/../node_modules/.pnpm/@react-aria+utils@3.23.2_react@18.2.0/node_modules/@react-aria/utils/dist/import.mjs\");\n/* harmony import */ var _react_aria_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @react-aria/utils */ \"(ssr)/../node_modules/.pnpm/@react-stately+utils@3.9.1_react@18.2.0/node_modules/@react-stately/utils/dist/import.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/../node_modules/.pnpm/next@14.1.2_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _react_aria_interactions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @react-aria/interactions */ \"(ssr)/../node_modules/.pnpm/@react-aria+interactions@3.21.1_react@18.2.0/node_modules/@react-aria/interactions/dist/import.mjs\");\n/* harmony import */ var _react_aria_label__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @react-aria/label */ \"(ssr)/../node_modules/.pnpm/@react-aria+label@3.7.6_react@18.2.0/node_modules/@react-aria/label/dist/import.mjs\");\n/* harmony import */ var _react_aria_i18n__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-aria/i18n */ \"(ssr)/../node_modules/.pnpm/@react-aria+i18n@3.10.2_react@18.2.0/node_modules/@react-aria/i18n/dist/real-module.mjs\");\n/* harmony import */ var _react_aria_focus__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @react-aria/focus */ \"(ssr)/../node_modules/.pnpm/@react-aria+focus@3.16.2_react@18.2.0/node_modules/@react-aria/focus/dist/import.mjs\");\n\n\n\n\n\n\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \nconst $aa519ee6cf463259$export$d6c8d9636a3dc49c = new WeakMap();\nfunction $aa519ee6cf463259$export$68e648cbec363a18(state, index) {\n    let data = $aa519ee6cf463259$export$d6c8d9636a3dc49c.get(state);\n    if (!data) throw new Error(\"Unknown slider state\");\n    return `${data.id}-${index}`;\n}\n\n\n\n\n\n\nfunction $bcca50147b47f54d$export$56b2c08e277f365(props, state, trackRef) {\n    let { labelProps: labelProps, fieldProps: fieldProps } = (0, _react_aria_label__WEBPACK_IMPORTED_MODULE_1__.useLabel)(props);\n    let isVertical = props.orientation === \"vertical\";\n    var _labelProps_id;\n    // Attach id of the label to the state so it can be accessed by useSliderThumb.\n    (0, $aa519ee6cf463259$export$d6c8d9636a3dc49c).set(state, {\n        id: (_labelProps_id = labelProps.id) !== null && _labelProps_id !== void 0 ? _labelProps_id : fieldProps.id,\n        \"aria-describedby\": props[\"aria-describedby\"],\n        \"aria-details\": props[\"aria-details\"]\n    });\n    let { direction: direction } = (0, _react_aria_i18n__WEBPACK_IMPORTED_MODULE_2__.useLocale)();\n    let { addGlobalListener: addGlobalListener, removeGlobalListener: removeGlobalListener } = (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_3__.useGlobalListeners)();\n    // When the user clicks or drags the track, we want the motion to set and drag the\n    // closest thumb.  Hence we also need to install useMove() on the track element.\n    // Here, we keep track of which index is the \"closest\" to the drag start point.\n    // It is set onMouseDown/onTouchDown; see trackProps below.\n    const realTimeTrackDraggingIndex = (0, react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const reverseX = direction === \"rtl\";\n    const currentPosition = (0, react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const { moveProps: moveProps } = (0, _react_aria_interactions__WEBPACK_IMPORTED_MODULE_4__.useMove)({\n        onMoveStart () {\n            currentPosition.current = null;\n        },\n        onMove ({ deltaX: deltaX, deltaY: deltaY }) {\n            let { height: height, width: width } = trackRef.current.getBoundingClientRect();\n            let size = isVertical ? height : width;\n            if (currentPosition.current == null) currentPosition.current = state.getThumbPercent(realTimeTrackDraggingIndex.current) * size;\n            let delta = isVertical ? deltaY : deltaX;\n            if (isVertical || reverseX) delta = -delta;\n            currentPosition.current += delta;\n            if (realTimeTrackDraggingIndex.current != null && trackRef.current) {\n                const percent = (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_5__.clamp)(currentPosition.current / size, 0, 1);\n                state.setThumbPercent(realTimeTrackDraggingIndex.current, percent);\n            }\n        },\n        onMoveEnd () {\n            if (realTimeTrackDraggingIndex.current != null) {\n                state.setThumbDragging(realTimeTrackDraggingIndex.current, false);\n                realTimeTrackDraggingIndex.current = null;\n            }\n        }\n    });\n    let currentPointer = (0, react__WEBPACK_IMPORTED_MODULE_0__.useRef)(undefined);\n    let onDownTrack = (e, id, clientX, clientY)=>{\n        // We only trigger track-dragging if the user clicks on the track itself and nothing is currently being dragged.\n        if (trackRef.current && !props.isDisabled && state.values.every((_, i)=>!state.isThumbDragging(i))) {\n            let { height: height, width: width, top: top, left: left } = trackRef.current.getBoundingClientRect();\n            let size = isVertical ? height : width;\n            // Find the closest thumb\n            const trackPosition = isVertical ? top : left;\n            const clickPosition = isVertical ? clientY : clientX;\n            const offset = clickPosition - trackPosition;\n            let percent = offset / size;\n            if (direction === \"rtl\" || isVertical) percent = 1 - percent;\n            let value = state.getPercentValue(percent);\n            // to find the closet thumb we split the array based on the first thumb position to the \"right/end\" of the click.\n            let closestThumb;\n            let split = state.values.findIndex((v)=>value - v < 0);\n            if (split === 0) closestThumb = split;\n            else if (split === -1) closestThumb = state.values.length - 1;\n            else {\n                let lastLeft = state.values[split - 1];\n                let firstRight = state.values[split];\n                // Pick the last left/start thumb, unless they are stacked on top of each other, then pick the right/end one\n                if (Math.abs(lastLeft - value) < Math.abs(firstRight - value)) closestThumb = split - 1;\n                else closestThumb = split;\n            }\n            // Confirm that the found closest thumb is editable, not disabled, and move it\n            if (closestThumb >= 0 && state.isThumbEditable(closestThumb)) {\n                // Don't unfocus anything\n                e.preventDefault();\n                realTimeTrackDraggingIndex.current = closestThumb;\n                state.setFocusedThumb(closestThumb);\n                currentPointer.current = id;\n                state.setThumbDragging(realTimeTrackDraggingIndex.current, true);\n                state.setThumbValue(closestThumb, value);\n                addGlobalListener(window, \"mouseup\", onUpTrack, false);\n                addGlobalListener(window, \"touchend\", onUpTrack, false);\n                addGlobalListener(window, \"pointerup\", onUpTrack, false);\n            } else realTimeTrackDraggingIndex.current = null;\n        }\n    };\n    let onUpTrack = (e)=>{\n        var _e_changedTouches;\n        var _e_pointerId;\n        let id = (_e_pointerId = e.pointerId) !== null && _e_pointerId !== void 0 ? _e_pointerId : (_e_changedTouches = e.changedTouches) === null || _e_changedTouches === void 0 ? void 0 : _e_changedTouches[0].identifier;\n        if (id === currentPointer.current) {\n            if (realTimeTrackDraggingIndex.current != null) {\n                state.setThumbDragging(realTimeTrackDraggingIndex.current, false);\n                realTimeTrackDraggingIndex.current = null;\n            }\n            removeGlobalListener(window, \"mouseup\", onUpTrack, false);\n            removeGlobalListener(window, \"touchend\", onUpTrack, false);\n            removeGlobalListener(window, \"pointerup\", onUpTrack, false);\n        }\n    };\n    if (\"htmlFor\" in labelProps && labelProps.htmlFor) {\n        // Ideally the `for` attribute should point to the first thumb, but VoiceOver on iOS\n        // causes this to override the `aria-labelledby` on the thumb. This causes the first\n        // thumb to only be announced as the slider label rather than its individual name as well.\n        // See https://bugs.webkit.org/show_bug.cgi?id=172464.\n        delete labelProps.htmlFor;\n        labelProps.onClick = ()=>{\n            var // Safari does not focus <input type=\"range\"> elements when clicking on an associated <label>,\n            // so do it manually. In addition, make sure we show the focus ring.\n            _document_getElementById;\n            (_document_getElementById = document.getElementById((0, $aa519ee6cf463259$export$68e648cbec363a18)(state, 0))) === null || _document_getElementById === void 0 ? void 0 : _document_getElementById.focus();\n            (0, _react_aria_interactions__WEBPACK_IMPORTED_MODULE_4__.setInteractionModality)(\"keyboard\");\n        };\n    }\n    return {\n        labelProps: labelProps,\n        // The root element of the Slider will have role=\"group\" to group together\n        // all the thumb inputs in the Slider.  The label of the Slider will\n        // be used to label the group.\n        groupProps: {\n            role: \"group\",\n            ...fieldProps\n        },\n        trackProps: (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_3__.mergeProps)({\n            onMouseDown (e) {\n                if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) return;\n                onDownTrack(e, undefined, e.clientX, e.clientY);\n            },\n            onPointerDown (e) {\n                if (e.pointerType === \"mouse\" && (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey)) return;\n                onDownTrack(e, e.pointerId, e.clientX, e.clientY);\n            },\n            onTouchStart (e) {\n                onDownTrack(e, e.changedTouches[0].identifier, e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n            },\n            style: {\n                position: \"relative\",\n                touchAction: \"none\"\n            }\n        }, moveProps),\n        outputProps: {\n            htmlFor: state.values.map((_, index)=>(0, $aa519ee6cf463259$export$68e648cbec363a18)(state, index)).join(\" \"),\n            \"aria-live\": \"off\"\n        }\n    };\n}\n\n\n\n\n\n\n\n\n\nfunction $47b897dc8cdb026b$export$8d15029008292ae(opts, state) {\n    let { index: index = 0, isRequired: isRequired, validationState: validationState, isInvalid: isInvalid, trackRef: trackRef, inputRef: inputRef, orientation: orientation = state.orientation, name: name } = opts;\n    let isDisabled = opts.isDisabled || state.isDisabled;\n    let isVertical = orientation === \"vertical\";\n    let { direction: direction } = (0, _react_aria_i18n__WEBPACK_IMPORTED_MODULE_2__.useLocale)();\n    let { addGlobalListener: addGlobalListener, removeGlobalListener: removeGlobalListener } = (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_3__.useGlobalListeners)();\n    let data = (0, $aa519ee6cf463259$export$d6c8d9636a3dc49c).get(state);\n    var _opts_arialabelledby;\n    const { labelProps: labelProps, fieldProps: fieldProps } = (0, _react_aria_label__WEBPACK_IMPORTED_MODULE_1__.useLabel)({\n        ...opts,\n        id: (0, $aa519ee6cf463259$export$68e648cbec363a18)(state, index),\n        \"aria-labelledby\": `${data.id} ${(_opts_arialabelledby = opts[\"aria-labelledby\"]) !== null && _opts_arialabelledby !== void 0 ? _opts_arialabelledby : \"\"}`.trim()\n    });\n    const value = state.values[index];\n    const focusInput = (0, react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        if (inputRef.current) (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_3__.focusWithoutScrolling)(inputRef.current);\n    }, [\n        inputRef\n    ]);\n    const isFocused = state.focusedThumb === index;\n    (0, react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (isFocused) focusInput();\n    }, [\n        isFocused,\n        focusInput\n    ]);\n    let reverseX = direction === \"rtl\";\n    let currentPosition = (0, react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    let { keyboardProps: keyboardProps } = (0, _react_aria_interactions__WEBPACK_IMPORTED_MODULE_4__.useKeyboard)({\n        onKeyDown (e) {\n            let { getThumbMaxValue: getThumbMaxValue, getThumbMinValue: getThumbMinValue, decrementThumb: decrementThumb, incrementThumb: incrementThumb, setThumbValue: setThumbValue, setThumbDragging: setThumbDragging, pageSize: pageSize } = state;\n            // these are the cases that useMove or useSlider don't handle\n            if (!/^(PageUp|PageDown|Home|End)$/.test(e.key)) {\n                e.continuePropagation();\n                return;\n            }\n            // same handling as useMove, stopPropagation to prevent useSlider from handling the event as well.\n            e.preventDefault();\n            // remember to set this so that onChangeEnd is fired\n            setThumbDragging(index, true);\n            switch(e.key){\n                case \"PageUp\":\n                    incrementThumb(index, pageSize);\n                    break;\n                case \"PageDown\":\n                    decrementThumb(index, pageSize);\n                    break;\n                case \"Home\":\n                    setThumbValue(index, getThumbMinValue(index));\n                    break;\n                case \"End\":\n                    setThumbValue(index, getThumbMaxValue(index));\n                    break;\n            }\n            setThumbDragging(index, false);\n        }\n    });\n    let { moveProps: moveProps } = (0, _react_aria_interactions__WEBPACK_IMPORTED_MODULE_4__.useMove)({\n        onMoveStart () {\n            currentPosition.current = null;\n            state.setThumbDragging(index, true);\n        },\n        onMove ({ deltaX: deltaX, deltaY: deltaY, pointerType: pointerType, shiftKey: shiftKey }) {\n            const { getThumbPercent: getThumbPercent, setThumbPercent: setThumbPercent, decrementThumb: decrementThumb, incrementThumb: incrementThumb, step: step, pageSize: pageSize } = state;\n            let { width: width, height: height } = trackRef.current.getBoundingClientRect();\n            let size = isVertical ? height : width;\n            if (currentPosition.current == null) currentPosition.current = getThumbPercent(index) * size;\n            if (pointerType === \"keyboard\") {\n                if (deltaX > 0 && reverseX || deltaX < 0 && !reverseX || deltaY > 0) decrementThumb(index, shiftKey ? pageSize : step);\n                else incrementThumb(index, shiftKey ? pageSize : step);\n            } else {\n                let delta = isVertical ? deltaY : deltaX;\n                if (isVertical || reverseX) delta = -delta;\n                currentPosition.current += delta;\n                setThumbPercent(index, (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_5__.clamp)(currentPosition.current / size, 0, 1));\n            }\n        },\n        onMoveEnd () {\n            state.setThumbDragging(index, false);\n        }\n    });\n    // Immediately register editability with the state\n    state.setThumbEditable(index, !isDisabled);\n    const { focusableProps: focusableProps } = (0, _react_aria_focus__WEBPACK_IMPORTED_MODULE_6__.useFocusable)((0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_3__.mergeProps)(opts, {\n        onFocus: ()=>state.setFocusedThumb(index),\n        onBlur: ()=>state.setFocusedThumb(undefined)\n    }), inputRef);\n    let currentPointer = (0, react__WEBPACK_IMPORTED_MODULE_0__.useRef)(undefined);\n    let onDown = (id)=>{\n        focusInput();\n        currentPointer.current = id;\n        state.setThumbDragging(index, true);\n        addGlobalListener(window, \"mouseup\", onUp, false);\n        addGlobalListener(window, \"touchend\", onUp, false);\n        addGlobalListener(window, \"pointerup\", onUp, false);\n    };\n    let onUp = (e)=>{\n        var _e_changedTouches;\n        var _e_pointerId;\n        let id = (_e_pointerId = e.pointerId) !== null && _e_pointerId !== void 0 ? _e_pointerId : (_e_changedTouches = e.changedTouches) === null || _e_changedTouches === void 0 ? void 0 : _e_changedTouches[0].identifier;\n        if (id === currentPointer.current) {\n            focusInput();\n            state.setThumbDragging(index, false);\n            removeGlobalListener(window, \"mouseup\", onUp, false);\n            removeGlobalListener(window, \"touchend\", onUp, false);\n            removeGlobalListener(window, \"pointerup\", onUp, false);\n        }\n    };\n    let thumbPosition = state.getThumbPercent(index);\n    if (isVertical || direction === \"rtl\") thumbPosition = 1 - thumbPosition;\n    let interactions = !isDisabled ? (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_3__.mergeProps)(keyboardProps, moveProps, {\n        onMouseDown: (e)=>{\n            if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) return;\n            onDown();\n        },\n        onPointerDown: (e)=>{\n            if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) return;\n            onDown(e.pointerId);\n        },\n        onTouchStart: (e)=>{\n            onDown(e.changedTouches[0].identifier);\n        }\n    }) : {};\n    (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_3__.useFormReset)(inputRef, value, (v)=>{\n        state.setThumbValue(index, v);\n    });\n    // We install mouse handlers for the drag motion on the thumb div, but\n    // not the key handler for moving the thumb with the slider.  Instead,\n    // we focus the range input, and let the browser handle the keyboard\n    // interactions; we then listen to input's onChange to update state.\n    return {\n        inputProps: (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_3__.mergeProps)(focusableProps, fieldProps, {\n            type: \"range\",\n            tabIndex: !isDisabled ? 0 : undefined,\n            min: state.getThumbMinValue(index),\n            max: state.getThumbMaxValue(index),\n            step: state.step,\n            value: value,\n            name: name,\n            disabled: isDisabled,\n            \"aria-orientation\": orientation,\n            \"aria-valuetext\": state.getThumbValueLabel(index),\n            \"aria-required\": isRequired || undefined,\n            \"aria-invalid\": isInvalid || validationState === \"invalid\" || undefined,\n            \"aria-errormessage\": opts[\"aria-errormessage\"],\n            \"aria-describedby\": [\n                data[\"aria-describedby\"],\n                opts[\"aria-describedby\"]\n            ].filter(Boolean).join(\" \"),\n            \"aria-details\": [\n                data[\"aria-details\"],\n                opts[\"aria-details\"]\n            ].filter(Boolean).join(\" \"),\n            onChange: (e)=>{\n                state.setThumbValue(index, parseFloat(e.target.value));\n            }\n        }),\n        thumbProps: {\n            ...interactions,\n            style: {\n                position: \"absolute\",\n                [isVertical ? \"top\" : \"left\"]: `${thumbPosition * 100}%`,\n                transform: \"translate(-50%, -50%)\",\n                touchAction: \"none\"\n            }\n        },\n        labelProps: labelProps,\n        isDragging: state.isThumbDragging(index),\n        isDisabled: isDisabled,\n        isFocused: isFocused\n    };\n}\n\n\n\n\n\n//# sourceMappingURL=module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/.pnpm/@react-aria+slider@3.7.6_react@18.2.0/node_modules/@react-aria/slider/dist/import.mjs\n");

/***/ })

};
;